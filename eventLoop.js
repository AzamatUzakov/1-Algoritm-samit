console.log("–ù–∞—á–∞–ª–æ");

setTimeout(() => {
  console.log("setTimeout");
}, 0);

Promise.resolve().then(() => console.log("Promise"));

console.log("–ö–æ–Ω–µ—Ü");

/* –ß—Ç–æ —Ç–∞–∫–æ–µ Event Loop?
Event Loop ‚Äì —ç—Ç–æ –º–µ—Ö–∞–Ω–∏–∑–º –≤ JavaScript, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–¥ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏ –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–µ. –û–Ω —É–ø—Ä–∞–≤–ª—è–µ—Ç –æ—á–µ—Ä–µ–¥—å—é –∑–∞–¥–∞—á –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–µ–∂–¥—É –æ—Å–Ω–æ–≤–Ω—ã–º –ø–æ—Ç–æ–∫–æ–º (main thread) –∏ callback'–∞–º–∏.

üí° –ö—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –¥–ª—è —Å–æ–±–µ—Å–∞:
"Event Loop ‚Äì —ç—Ç–æ –º–µ—Ö–∞–Ω–∏–∑–º, –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –≤ JavaScript, –∏–∑–≤–ª–µ–∫–∞—è –∏—Ö –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –∏ –≤—ã–ø–æ–ª–Ω—è—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ."

–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Event Loop?
–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π).
–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ (setTimeout, fetch, –ø—Ä–æ–º–∏—Å—ã –∏ –¥—Ä.) –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ –æ—á–µ—Ä–µ–¥—å (callback queue / microtask queue).
–ö–æ–≥–¥–∞ —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤ (Call Stack) –ø—É—Å—Ç, Event Loop –±–µ—Ä–µ—Ç –∑–∞–¥–∞—á—É –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç. */
